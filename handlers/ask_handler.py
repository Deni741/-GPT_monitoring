from telegram import Update
from telegram.ext import ContextTypes
from core.ask_handler import handle_ask_instruction
from utils.logger import log_and_print

async def ask_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    try:
        await update.message.reply_text("üì© –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –æ—Ç—Ä–∏–º–∞–Ω–∞. GPT –æ–±—Ä–æ–±–ª—è—î –∑–∞–ø–∏—Ç...")
        log_and_print("[ASK] –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –æ—Ç—Ä–∏–º–∞–Ω–∞. GPT –æ–±—Ä–æ–±–ª—è—î –∑–∞–ø–∏—Ç...")
        await handle_ask_instruction()
        await update.message.reply_text("‚úÖ –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –æ–±—Ä–æ–±–ª–µ–Ω–∞ –π –≤–∏–∫–æ–Ω–∞–Ω–∞.")
    except Exception as e:
        await update.message.reply_text(f"‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: {e}")
        log_and_print(f"[ASK] –ü–æ–º–∏–ª–∫–∞: {e}")
