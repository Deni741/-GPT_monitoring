from core.executor import save_code_to_file
from core.instruction_queue import instruction_queue

def handle_ask_instruction(text: str) -> str:
    if not text.lower().startswith("/ask"):
        return "‚ùå –ù–µ–≤—ñ–¥–æ–º–∞ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è."

    code_request = text[4:].strip()
    if not code_request:
        return "‚ùå –ù–∞–ø–∏—à–∏, —â–æ —Ç—Ä–µ–±–∞ –∑—Ä–æ–±–∏—Ç–∏."

    # üß† –ì–µ–Ω–µ—Ä—É—î–º–æ –∫–æ–¥ (—ñ–º—ñ—Ç–∞—Ü—ñ—è, –∑–∞–º—ñ–Ω–∏—Ç–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω–∏–π GPT call)
    if "–ø–µ—Ä–µ–º–Ω–æ–∂—É—î –¥–≤–∞ —á–∏—Å–ª–∞" in code_request:
        generated_code = "def multiply(a, b):\n    return a * b"
        file_path = "handlers/test_handler.py"
    else:
        return "‚ùå –ù–µ –≤–ø—ñ–∑–Ω–∞–≤ –∑–∞–ø–∏—Ç."

    # üìù –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∫–æ–¥ —É —Ñ–∞–π–ª
    result = save_code_to_file(generated_code, file_path)
    return result
