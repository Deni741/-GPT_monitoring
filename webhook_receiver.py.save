import http.server
import json
import subprocess
import telegram
import os
from dotenv import load_dotenv

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ç–æ–∫–µ–Ω Telegram —Ç–∞ ID
load_dotenv('/root/GPT_monitoring/.env')
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
TELEGRAM_CHAT_ID = os.getenv('TELEGRAM_CHAT_ID')

bot = telegram.Bot(token=TELEGRAM_TOKEN)

class WebhookHandler(http.server.BaseHTTPRequestHandler):
    def do_POST(self):
        content_length = int(self.headers['Content-Length'])
        body = self.rfile.read(content_length)

        try:
            payload = json.loads(body)
            commits = payload.get("commits", [])
            repo_name = payload.get("repository", {}).get("name", "–Ω–µ–≤—ñ–¥–æ–º–æ")

            if commits:
                for commit in commits:
                    message = commit.get("message", "–±–µ–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è")
                    author = commit.get("committer", {}).get("name", "–Ω–µ–≤—ñ–¥–æ–º–∏–π")
                    commit_url = commit.get("url", "")
                    sha = commit.get("id", "")[:7]

                    text = f"üîÑ <b>–û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤ GitHub ({repo_name})</b>\n" \
                           f"üë§ –ê–≤—Ç–æ—Ä: <code>{author}</code>\n" \
                           f"üí¨ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: <code>{message}</code>\n" \
                           f"üîó <a href='{commit_url}'>{sha}</a>"

                    bot.send_message(chat_id=TELEGRAM_CHAT_ID, text=text, parse_mode=telegram.constants.ParseMode.HTML)
            else:
                bot.send_message(chat_id=TELEGRAM_CHAT_ID, text="‚ö†Ô∏è –û—Ç—Ä–∏–º–∞–Ω–æ Webhook –±–µ–∑ –∫–æ–º—ñ—Ç—ñ–≤.")

        except Exception as e:
            bot.send_message(chat_id=TELEGRAM_CHAT_ID, text=f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ Webhook: {e}")

        self.send_response(200)
        self.end_headers()

if __name__ == '__main__':
    server_address = ('', 8080)
    httpd = http.server.HTTPServer(server_address, WebhookHandler)
    print('–°–ª—É—Ö–∞—î–º–æ –ø–æ—Ä—Ç 8080...')
    httpd.serve_forever()
